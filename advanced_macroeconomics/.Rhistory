# Set parameters
g=3                             # Growth rate
set.seed(42);e=rnorm(100,0,6)   # Random shocks
y=100                           # Starting value
# Generate data over time
for(i in 2:100){
y[i]<-g+y[i-1]+e[i]
}
# First-difference model
Ly=c(NA,y[-100])
Dy=y[-1]-Ly[-1]
# Plot results
par(mar=c(4,4,2,2),mfrow=c(2,1),las=1,bty="n",
cex.axis=1.5,cex.lab=1.5,cex.main=1.7)
plot(y,xlab="",ylab="",main=expression(y),axes=FALSE,type="l",lwd=2)
axis(2,tick=FALSE)
plot(Dy,xlab="",ylab="",main=expression(paste(Delta,y)),
axes=FALSE,type="l",lwd=2)
abline(h=3,lty=2)
axis(1,tick=FALSE);axis(2,tick=FALSE)
# Simulate Impulse Response Function for AR(2) model
par(mar=c(4,5,2,1),las=1,cex.axis=1.5,cex.lab=1.5)
# Simulate Impulse Response Function for AR(2) model
par(mar=c(4,5,2,1),las=1,cex.axis=2,cex.lab=2)
# Generate response functions
y1<-c(1,.6*1,rep(NA,18))
for(i in 3:20){
y1[i]=.6*y1[i-1]+.3*y1[i-2]
}
y2<-c(1,1.5*1,rep(NA,18))
for(i in 3:20){
y2[i]=1.5*y2[i-1]+-.6*y2[i-2]
}
# Plot results
plot(y1,type="l",lwd=2,ylim=c(-.1,1.7),xlab="",ylab="",axes=FALSE)
lines(y2,lwd=2,col="steelblue4",lty=2)
axis(1,tick=FALSE,at=1:20);axis(2,tick=FALSE)
text(2.4,y1[2]-.15,cex=1.5,expression(y==paste(0.6*y[t-1]+0.3*y[t-2])))
text(3.3,y2[3]+.05,cex=1.5,expression(y==paste(1.5*y[t-1]-0.6*y[t-2])))
dev.off()
# Simulate Impulse Response Function for AR(2) model
par(mar=c(4,5,2,1),las=1,cex.axis=2,cex.lab=2)
# Generate response functions
y1<-c(1,.6*1,rep(NA,18))
for(i in 3:20){
y1[i]=.6*y1[i-1]+.3*y1[i-2]
}
y2<-c(1,1.5*1,rep(NA,18))
for(i in 3:20){
y2[i]=1.5*y2[i-1]+-.6*y2[i-2]
}
# Plot results
plot(y1,type="l",lwd=2,ylim=c(-.1,1.7),xlab="",ylab="",axes=FALSE)
lines(y2,lwd=2,col="steelblue4",lty=2)
axis(1,tick=FALSE,at=1:20);axis(2,tick=FALSE)
text(2.4,y1[2]-.15,cex=1.5,expression(y==paste(0.6*y[t-1]+0.3*y[t-2])))
text(3.3,y2[3]+.05,cex=1.5,expression(y==paste(1.5*y[t-1]-0.6*y[t-2])))
# Normal distribution
x<-seq(-5,5,length=1000)
y1<-dnorm(x,0,.5)
y2<-dnorm(x,0,1)
y3<-dnorm(x,0,5)
par(mar=c(4,4,1,1),bty="n",cex.axis=1.5,cex.lab=1.5,las=1)
plot(x,y1,type="l",lwd=2,col="black",axes=FALSE,xlab="",ylab="",
xlim=c(-5,5),ylim=c(0,1))
lines(x,y2,lwd=2,col="steelblue4")
lines(x,y3,lwd=2,col="firebrick3")
axis(1,tick=FALSE)
axis(2,tick=FALSE)
# Gamma distribution
x<-seq(0,20,length=1000)
y1<-dgamma(x,shape=1,scale=2)
y2<-dgamma(x,shape=3,scale=2)
y3<-dgamma(x,shape=7,scale=1)
plot(x,y1,type="l",lwd=2,col="black",axes=FALSE,xlab="",ylab="",
xlim=c(0,20),ylim=c(0,.5))
lines(x,y2,lwd=2,col="steelblue4")
lines(x,y3,lwd=2,col="firebrick3")
axis(1,tick=FALSE)
axis(2,tick=FALSE)
# Beta distribution
x<-seq(0,1,length=1000)
y1<-dbeta(x,.5,.5)
y2<-dbeta(x,2,5)
y3<-dbeta(x,2,2)
plot(x,y1,type="l",lwd=2,col="black",axes=FALSE,xlab="",ylab="",
xlim=c(0,1),ylim=c(0,2.5))
lines(x,y2,lwd=2,col="steelblue4")
lines(x,y3,lwd=2,col="firebrick3")
axis(1,tick=FALSE)
axis(2,tick=FALSE)
#### 1) Set parameters ####
t=0:100
g=.02
lambda=.01
sigma=.04
e=exp(1)
# Technology levels
# For leader country A_t=A_0e^gt
A=1*e^(.02*t)
# Solution for follower country takes form
# A_jt = (sigma_j/sigma_j+g-lambda_j)A_t + D_j0 e^-(sigma_j-lambda_j)t
D=(sigma/(sigma+g-lambda))*A+-.5*e^-((sigma-lambda)*t)
D2=(sigma/(sigma+g-lambda))*A+.5*e^-((sigma-lambda)*t)
# Ratio follower/leader
R=D/A
R2=D2/A
# Growth rate technology level follower
require(data.table)
G=(D-shift(D,n=1,type="lag"))/shift(D,n=1,type="lag")
G2=(D2-shift(D2,n=1,type="lag"))/shift(D2,n=1,type="lag")
### 3) Create figures ###
par(las=1,bty="n",cex.axis=1.5,cex.lab=1.5,cex.main=1.7,mfrow=c(1,2))
# Technology level over time
plot(A,type="l",axes=FALSE,xlab="",ylab="",ylim=c(0,10),lwd=2,
main="Follower starts below eq.")
lines(D,lwd=2,col="steelblue4")
axis(1,tick=FALSE);axis(2,tick=FALSE)
plot(A,type="l",axes=FALSE,xlab="",ylab="",ylim=c(0,10),lwd=2,
main="Follower starts above eq.")
lines(D2,lty=2,lwd=2,col="steelblue4")
axis(1,tick=FALSE);axis(2,tick=FALSE)
# Ratio follower/leader
par(las=1,bty="n",cex.axis=1.5,cex.lab=1.5,mfrow=c(1,1))
plot(R,type="l",axes=FALSE,xlab="",ylab="",ylim=c(.3,1.3),
lwd=2,col="steelblue4")
lines(R2,col="steelblue4",lwd=2,lty=2)
abline(h=.8,lwd=1.5)
axis(1,tick=FALSE);axis(2,tick=FALSE)
# Technology growth rate
plot(G,type="l",axes=FALSE,xlab="",ylab="",ylim=c(0,.11),lwd=2,col="steelblue4")
lines(G2,lwd=2,col="steelblue4",lty=2)
abline(h=.02,lwd=1.5)
axis(1,tick=FALSE);axis(2,tick=FALSE)
#### 4) Growth miracle ####
# Economy changes from having sigma_j=0.005 to sigma_j=0.04 in period 21
# Let the economy start at having economy at 30% of technology level leader
sigma0=.005
L=1/3-.3
m=(sigma0/(sigma0+g-lambda))*A-L*e^-((sigma0-lambda)*t)
# Growth rate changes at period 21. Need to adjust D_j0
d=(sigma/(sigma+g-lambda))*A[21]-m[21]
m[22:101]=(sigma/(sigma+g-lambda))*A[22:101]+-d*e^-((sigma-lambda)*t[1:80])
# Technology levels over time
plot(A,type="l",axes=FALSE,xlab="",ylab="",ylim=c(0,10),lwd=2)
lines(m,lwd=2,col="steelblue4")
axis(1,tick=FALSE);axis(2,tick=FALSE)
# Ratio follower leader
R3=m/A
plot(R3,type="l",axes=FALSE,xlab="",ylab="",ylim=c(.3,.8),
lwd=2,col="steelblue4")
abline(h=.8,lwd=1.5)
axis(1,tick=FALSE);axis(2,tick=FALSE)
# Growth rate technology
G3=(m-shift(m,n=1,type="lag"))/shift(m,n=1,type="lag")
plot(G3,type="l",axes=FALSE,xlab="",ylab="",ylim=c(0,.11),lwd=2,col="steelblue4")
abline(h=.02,lwd=1.5)
axis(1,tick=FALSE);axis(2,tick=FALSE)
## Example income over time
# Data taken from:
# http://www.ggdc.net/maddison/maddison-project/home.htm
setwd('~/Dropbox/github/teaching/advanced_macroeconomics')
par(bty="n",las=1,cex.axis=2,cex.lab=2)
# Load data and write to vectors
maddison<-read.csv("data/maddison.csv",header=TRUE)
# Load data and write to vectors
maddison<-read.csv("data/maddison.csv",header=TRUE)
## Example income over time
# Data taken from:
# http://www.ggdc.net/maddison/maddison-project/home.htm
setwd('~/Dropbox/github/teaching/advanced_macroeconomics')
par(bty="n",las=1,cex.axis=2,cex.lab=2)
# Load data and write to vectors
maddison<-read.csv("data/maddison.csv",header=TRUE)
maddison<-maddison[maddison$Year>=1700,] # Subset due to missing values
year<-maddison$Year
nld<-maddison[,2] # Netherlands
zaf<-maddison[,3] # South Africa (Cape Colony)
idn<-maddison[,4] # Indonesia (Java)
# Plot data
plot(year,nld,ylim=c(450,26000),xlim=c(1700,2020),type="b",log="y",
xlab="",ylab="",axes=FALSE,pch=0)
text(1720,nld[1]+250,"the Netherlands",cex=1.2)
par(new=TRUE)
plot(year,zaf,ylim=c(450,26000),xlim=c(1700,2020),type="b",log="y",
xlab="",ylab="",axes=FALSE,pch=19)
text(1720,zaf[1]-400,"South Africa \n (Cape Colony)",cex=1.2)
par(new=TRUE)
plot(year,idn,ylim=c(450,26000),xlim=c(1700,2020),type="b",log="y",
xlab="",ylab="",axes=FALSE,pch=17,col="steelblue4")
text(1790,idn[20],"Indonesia \n (Java)",cex=1.2)
axis(1,tick=FALSE);axis(2,tick=FALSE,line=-1)
par(mar=c(5,5,2,2),bty="n",las=1,cex.axis=2,cex.lab=2)
# Load data and write to vectors
maddison<-read.csv("data/maddison.csv",header=TRUE)
maddison<-maddison[maddison$Year>=1700,] # Subset due to missing values
year<-maddison$Year
nld<-maddison[,2] # Netherlands
zaf<-maddison[,3] # South Africa (Cape Colony)
idn<-maddison[,4] # Indonesia (Java)
# Plot data
plot(year,nld,ylim=c(450,26000),xlim=c(1700,2020),type="b",log="y",
xlab="",ylab="",axes=FALSE,pch=0)
text(1720,nld[1]+250,"the Netherlands",cex=1.2)
par(new=TRUE)
plot(year,zaf,ylim=c(450,26000),xlim=c(1700,2020),type="b",log="y",
xlab="",ylab="",axes=FALSE,pch=19)
text(1720,zaf[1]-400,"South Africa \n (Cape Colony)",cex=1.2)
par(new=TRUE)
plot(year,idn,ylim=c(450,26000),xlim=c(1700,2020),type="b",log="y",
xlab="",ylab="",axes=FALSE,pch=17,col="steelblue4")
text(1790,idn[20],"Indonesia \n (Java)",cex=1.2)
axis(1,tick=FALSE);axis(2,tick=FALSE,line=-1)
summary(idn)
summary(zaf)
summary(nld)
# Function for drawing lines
lifeLines<-function(series,col="black",hcol="black",lwd=1,hlwd=2){
for (i in 1:length(series[,1])){
lines(startYear:endYear,series[i,],col=col,lwd=lwd)
}
# Data
require(reshape2)
oecd<-read.csv("data/oecd_productivity.csv",header=TRUE)
oecd<-read.csv('data/oecd')
oecd<-read.csv('data/oecd.csv')
df<-data.frame(country=oecd$Country,year=oecd$Time,gdp.h=oecd$Value)
df.w<-reshape(df,timevar="year",idvar=c("country"),direction="wide")
rownames(df.w)<-df.w$country; m<-df.w[,-1]
startYear<-min(df$year);endYear<-max(df$year)
# Plot
par(las=1,tck=0.02,mar=c(4,5,3,5),mgp=c(2.8,0.3,2.8),
cex.lab=1.2,cex.axis=1.2,cex.main=0.9)
plot(0,xlim=c(startYear,endYear),ylim=c(0,100),type="n",bty="n",
main="",xlab="",ylab="GDP per hour worked",axes=FALSE)
lifeLines(m,col="grey60")
lines(startYear:endYear,m[16,],col="black",lwd=2.5)
lines(startYear:endYear,m[13,],col="steelblue4",lwd=2.5)
axis(1,tick=FALSE); axis(2,tick=FALSE)
## Age dependency
setwd('~/Dropbox/github/teaching/advanced_macroeconomics')
par(mar=c(5,5,2,2),bty='n',las=1,cex.axis=2,cex.lab=2)
require(WDI)
dependency<-WDIsearch("dependency ratio",field="name",short=FALSE)
wdi2<-WDI(c("US","DE"),dependency[,1],start=1961,end=2015)
# Data to time series
US.o<-ts(wdi2[wdi2$iso2c=="US",][,5],start=c(1961,1),freq=1)
US.y<-ts(wdi2[wdi2$iso2c=="US",][,6],start=c(1961,1),freq=1)
DE.o<-ts(wdi2[wdi2$iso2c=="DE",][,5],start=c(1961,1),freq=1)
DE.y<-ts(wdi2[wdi2$iso2c=="DE",][,6],start=c(1961,1),freq=1)
# Age dependency USA
plot(US.o,ylim=c(0,55),,xlab="",ylab="",axes=FALSE,lwd=2,
main="Age dependency USA")
lines(US.y,lty=2,lwd=2)
axis(1,tick=FALSE);axis(2,tick=FALSE,line=-1)
text(1962,48,"Young",cex=1.5)
text(1962,12,"Old",cex=1.5)
par(mar=c(5,5,2,2),bty='n',las=1,cex.axis=2,cex.lab=2,cex.main=2)
require(WDI)
dependency<-WDIsearch("dependency ratio",field="name",short=FALSE)
wdi2<-WDI(c("US","DE"),dependency[,1],start=1961,end=2015)
# Data to time series
US.o<-ts(wdi2[wdi2$iso2c=="US",][,5],start=c(1961,1),freq=1)
US.y<-ts(wdi2[wdi2$iso2c=="US",][,6],start=c(1961,1),freq=1)
DE.o<-ts(wdi2[wdi2$iso2c=="DE",][,5],start=c(1961,1),freq=1)
DE.y<-ts(wdi2[wdi2$iso2c=="DE",][,6],start=c(1961,1),freq=1)
# Age dependency USA
plot(US.o,ylim=c(0,55),,xlab="",ylab="",axes=FALSE,lwd=2,
main="Age dependency USA")
lines(US.y,lty=2,lwd=2)
axis(1,tick=FALSE);axis(2,tick=FALSE,line=-1)
text(1962,48,"Young",cex=1.5)
text(1962,12,"Old",cex=1.5)
# Age dependency Germany
plot(DE.o,ylim=c(0,55),,xlab="",ylab="",axes=FALSE,lwd=2,
main="Age dependency Germany")
lines(DE.y,lty=2,lwd=2)
axis(1,tick=FALSE);axis(2,tick=FALSE,line=-1)
text(1962,16,"Old",cex=1.5)
text(1962,30,"Young",cex=1.5)
require(jsonlite)
pop<-fromJSON("data/eurozone.json",flatten=TRUE)
Value<-pop$data$Value
pop_total<-ts(Value[1:91],start=c(1960,1),frequency=1)/1000000
pop_aged<-ts(Value[92:182],start=c(1960,1),frequency=1)/1000000
# Plot
par(bty="n",las=1,cex.axis=1.5,cex.lab=1.5,cex.main=1.7,mfrow=c(2,1))
plot(pop_total,axes=FALSE,xlab="",ylab="",main="Total population (millions)",
lwd=2)
abline(v=2017,lty=2)
axis(2,tick=FALSE)
plot(pop_aged,axes=FALSE,xlab="",ylab="",
main="Population aged 15-64 (millions)",lwd=2)
abline(v=2017,lty=2)
axis(2,tick=FALSE);axis(1,tick=FALSE)
## GDP examples
setwd('~/Dropbox/github/teaching/advanced_macroeconomics')
par(mar=c(5,5,2,2),bty='n',las=1,cex.axis=2,cex.lab=2)
library(wdi)
library(WDI)
# Denmark, South Korea, Hong Kong, Singapore
gdp_m<-WDIsearch("gdp per capita",field="name",short=FALSE)
wdi<-WDI(c("DK","KR","HK","SG"),gdp_m[5,1],start=1961,end=2015)
# Data to time-series objects
wdi<-wdi[order(wdi[,4]),]
DK<-ts(wdi[wdi$iso2c=="DK",][,3],start=c(1961,1),freq=1)
KR<-ts(wdi[wdi$iso2c=="KR",][,3],start=c(1961,1),freq=1)
HK<-ts(wdi[wdi$iso2c=="HK",][,3],start=c(1961,1),freq=1)
SG<-ts(wdi[wdi$iso2c=="SG",][,3],start=c(1961,1),freq=1)
# Figure GDP over time Denmark and South Korea
par(mar=c(4,4,3.5,1),mfrow=c(1,1))
plot(DK,ylim=c(1000,65000),log="y",xlab="",ylab="",axes=FALSE,lwd=2,
main="GDP per capita \n Denmark and South Korea 1961-2015")
lines(KR,lty=2,lwd=2)
axis(1,tick=FALSE);axis(2,tick=FALSE,line=-2)
text(1964,20000,"Denmark",cex=1.5)
text(1964,1000,"South Korea",cex=1.5)
# Figure GDP over time Hong Kong and Singapore
plot(HK,ylim=c(1000,65000),log="y",xlab="",ylab="",axes=FALSE,lwd=2,
main="GDP per capita Hong Kong and Singapore 1961-2015")
lines(SG,lty=2,lwd=2)
axis(1,tick=FALSE);axis(2,tick=FALSE,line=-1)
text(1964,3000,"Singapore",cex=1.5)
text(1964,6000,"Hong Kong",cex=1.5)
## Bond yields for PIGS economies
# (Include Germany as reference)
setwd('~/Dropbox/github/teaching/advanced_macroeconomics')
par(mar=c(5,5,2,2),bty='n',las=1,cex.axis=2,cex.lab=2)
# Load data
bonds<-read.csv("data/eu_bonds_lt.csv",header=TRUE)
# Load data
bonds<-read.csv("data/bonds.csv",header=TRUE)
# Data to time-series
portugal<-ts(bonds[bonds$GEO=="Portugal",]$Value,start=c(1980,1),frequency=12)
ireland<-ts(bonds[bonds$GEO=="Ireland",]$Value,start=c(1980,1),frequency=12)
greece<-ts(bonds[bonds$GEO=="Greece",]$Value,start=c(1980,1),frequency=12)
spain<-ts(bonds[bonds$GEO=="Spain",]$Value,start=c(1980,1),frequency=12)
germany<-ts(bonds[bonds$GEO=="Germany (until 1990 former territory of the FRG)",]$Value,start=c(1980,1),frequency=12)
# Subset to last 10 years
portugal<-window(portugal,start=c(2006,1),frequency=12)
ireland<-window(ireland,start=c(2006,1),frequency=12)
greece<-window(greece,start=c(2006,1),frequency=12)
spain<-window(spain,start=c(2006,1),frequency=12)
germany<-window(germany,start=c(2006,1),frequency=12)
# Plot data
par(las=1,bty="n",cex.axis=1.5,cex.lab=1.5,mar=c(4,5,1,1))
par(mar=c(5,5,2,2),bty='n',las=1,cex.axis=2,cex.lab=2)
# Plot data
plot(portugal,ylim=c(0,30),col="chartreuse4",axes=FALSE,xlab="",ylab="%",
lwd=2)
lines(ireland,col="steelblue4",lwd=2,lty=2)
lines(greece,col="dodgerblue2",lwd=2)
lines(spain,col="firebrick3",lwd=2)
lines(germany,lty=2,lwd=2)
axis(1,tick=FALSE)
axis(2,tick=FALSE)
text(2012,.5,"Germany",cex=1.2)
text(2012,4,"Spain",cex=1.2)
text(2012,10,"Ireland",cex=1.2)
text(2012,14.2,"Portugal",cex=1.2)
text(2012,17,"Greece",cex=1.2)
